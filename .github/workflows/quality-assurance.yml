name: Quality Assurance

on:
#  pull_request:
#    branches:
#      - main
  workflow_dispatch:

jobs:
#  validate-composer:
#    name: Validate Composer File
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.2
#          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
#          coverage: none
#
#      - name: Validate Composer
#        run: composer validate

  check-style:
    name: Check Styling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --config=.php-cs-fixer.dist.php --allow-risky=yes --dry-run -v

  phpstan:
    name: Perform Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: none

      - name: Install composer dependencies
        uses: ramsey/composer-install@v3

      - name: Run PHPStan
        run: vendor/bin/phpstan --error-format=github

#  rector:
#    name: Run Rector
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.2
#          coverage: none
#
#      - name: Install composer dependencies
#        uses: ramsey/composer-install@v3
#
#      - name: Run Rector
#        run: vendor/bin/rector process --no-ansi --dry-run --no-progress-bar

#  phpunit:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: true
#      matrix:
#        php-version: [7.4, 8.0, 8.1, 8.2, 8.3]
#        os: [ubuntu-latest]
#        database:
#          - mysql
#        stability:
#          - prefer-stable
#
#    name: Run Tests - P${{ matrix.php }} - ${{ matrix.database }} - ${{ matrix.stability }} - ${{ matrix.os }}
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, pdo_pgsql, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
#          coverage: pcov
#
#      - name: Setup problem matchers
#        run: |
#          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
#          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

#      - name: Install dependencies
#        run: |
#          composer global require php-coveralls/php-coveralls
#          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

#      - name: List Installed Dependencies
#        run: composer show -D

#      - name: 'Setup MySQL'
#        if: ${{ matrix.database == 'mysql' }}
#        uses: ankane/setup-mysql@v1
#        with:
#          mysql-version: 8.0
#          database: 'app'

#      - name: 'Setup PostgreSQL'
#        if: ${{ matrix.database == 'postgres' }}
#        uses: ankane/setup-postgres@v1

#      - name: Set database config - ${{ matrix.database }}
#        run: php -r "file_exists('tests/Fixtures/Config/database.config.php') || copy('tests/Fixtures/Config/database.${{ matrix.database }}.php', 'tests/Fixtures/Config/database.config.php');"
#
#      - name: List Discovered Locations
#        run: php ./xoops discovery:status
#
#      - name: Execute tests
#        run: vendor/bin/phpunit --coverage-clover build/reports/clover.xml

#      - name: Upload coverage results to Coveralls
#        env:
#          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          php-coveralls --coverage_clover=build/reports/clover.xml --json_path=build/reports/coveralls-upload.json -v
